{"name":"PyDictionary","tagline":"PyDictionary is a Dictionary Module for Python 2/3 to get meanings, translations, synonyms and Antonyms of words","body":"##PyDictionary: A \"Real\" Dictionary Module for Python\r\n\r\nPyDictionary is a Dictionary Module for Python 2/3 to get meanings, translations, synonyms and Antonyms of words. It uses WordNet for getting meanings, Google for translations, and thesaurus.com for getting synonyms and antonyms. \r\n\r\nThis module uses Python Requests, BeautifulSoup4 and goslate as dependencies\r\n\r\n###Installation\r\n\r\nInstallation is very simple through pip (or easy_install)\r\n\r\nFor pip\r\n\r\n```\r\npip install PyDictionary\r\n```\r\n\r\nFor Easy_Install\r\n\r\n```\r\neasy_install -U PyDictionary\r\n```\r\n\r\n###Usage\r\n\r\nPyDictionary can be utilised in 2 ways, either by creating a dictionary instance which can take words as arguments or by creating a dictionary instance with a fixed amount of words.\r\n\r\nFor example,\r\n\r\n```python\r\nfrom PyDictionary import PyDictionary\r\ndictionary=PyDictionary()\r\n```\r\n\r\nThis is will create a local instance of the PyDictionary class and now it can be used to get meanings, translations etc.\r\n\r\n```python\r\nprint (dictionary.meaning(\"indentation\"))\r\n```\r\n\r\nThis will return a dictionary containing the meanings of the word. \r\nFor example the above code will return:\r\n\r\n```\r\n{'Noun': ['a concave cut into a surface or edge (as in a coastline', 'the\r\n formation of small pits in a surface as a consequence of corrosion', 'th\r\ne space left between the margin and the start of an indented line', 'the \r\nact of cutting into an edge with toothlike notches or angular incisions']\r\n}                                                                        \r\n```\r\nThe dictionary keys are the different types of the word. If a word is both a verb and a noun then there will be 2 keys:'Noun' and 'Verb'.\r\nEach key refers to a list containing the meanings\r\n\r\n\r\nFor Synonyms,\r\n\r\n```python\r\nprint (dictionary.synonym(\"Life\"))\r\n```\r\n\r\nThis will return a list containing the Synonyms of the word.\r\n\r\nFor Antonyms,\r\n\r\n```python\r\nprint (dictionary.antonym(\"Life\"))\r\n```\r\nThis will return a list containing the Antonyms of the word.\r\n\r\nFor Translations,\r\n\r\n```python\r\nprint (dictionary.translate(\"Range\",'es'))\r\n```\r\n\r\nThis will return the Translation of the word \"Range\" in Spanish. For Language codes consult Google Translate. The return value is String in Python 3 and Unicode in Python 2\r\n\r\nAlternatively, you can set a fixed number of words to the PyDictionary Instance. This is useful if you just want to get the meanings of some words quickly without any development need.\r\n\r\nExample:\r\n\r\n```python\r\nfrom PyDictionary import PyDictionary\r\n\r\ndictionary=PyDictionary(\"hotel\",\"ambush\",\"nonchalant\",\"perceptive\")\r\n'There can be any number of words in the Instance'\r\n\r\nprint(dictionary.printMeanings()) '''This print the meanings of all the words'''\r\nprint(dictionary.getMeanings()) '''This will return meanings as dictionaries'''\r\nprint (dictionary.getSynonyms())\r\n\r\nprint (dictionary.translateTo(\"hi\")) '''This will translate all words to Hindi'''\r\n\r\n```\r\n\r\nSimilarly Synonyms and Antonyms can also be printed onto the screen.\r\n\r\n##Apps using PyDictionary\r\n\r\nCheck this awesome pygame windows game created by RajK853 that improves your vocabulary by using PyDictionary: \r\n\r\n<a href=\"https://github.com/RajK853/Vocab/\">Vocab</a>\r\n\r\nDownload link: <a href=\"https://raw.githubusercontent.com/RajK853/Vocab/master/Vocab%20(Exe).zip\">Vocab</a>\r\n###About\r\n\r\nThe source is in the source.py file. Feel free to check it out.\r\n\r\nCreated By Pradipta. Copyright 2014\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}